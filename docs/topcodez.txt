TOPCODEZ

#PHP-LARAVEL
#FORM COM ARRAY DINAMICO
#FORM COM RESPOSTAS MULTIPLA ESCOLHA

    public function step4(Request $request)
    {
        info($request->all());
        // 'respostas' => array ( 'question->id' => 'answer->value' )
        // Se for tipo 'multiple' repete o id da questão

        try {
            $lead = Lead::findOrFail($request->id);
            $lead->confirm_holder = $request->confirm_holder === 'on';
            $lead->save();

            $user = User::where('email', $lead->email)->first();

            $customer = Customer::where('user_id', $user->id)->first();

            //Cria Customer
            if (!$customer) {
                $customer = new Customer();
            }

            $customer->user_id = $user->id;
            $customer->birth = $lead->date_of_birth;
            $customer->gender = $lead->gender;
            $customer->status = 'pendente';
            $customer->social_name = $lead->name;
            $customer->smoker = $lead->smoker;
            $customer->weight = $lead->weight;
            $customer->height = $lead->height;
            $customer->job = $lead->job;
            $customer->monthly_income = preg_replace('/\D/', '', $lead->monthly_income);
            $customer->save();

            $insurance = Insurance::where('user_id', $user->id)->first();

            //Excluir as respostas anteriores
            DB::table('insurance_question')->where('insurance_id', $insurance->id)->delete();

            $currentTimestamp = Carbon::now();

            //info($insurance->questions()->get());

            foreach ($request->respostas as $question_id => $answers) {

                // Pega a descrição da questão
                $question_description = $insurance->questions()
                    ->where('questions.id', $question_id)
                    ->first()
                    ->description;

                // Verifica se a resposta é um array (múltiplas respostas) ou uma string (resposta única)
                if (is_array($answers)) {

                    foreach ($answers as $answer) {
                        DB::table('insurance_question')->insert([
                            'insurance_id' => $insurance->id,
                            'question_id' => $question_id,
                            'question_description' => $question_description,
                            'answer_description' => $answer,
                            'created_at' => $currentTimestamp,
                            'updated_at' => $currentTimestamp
                        ]);
                    }
                } else {
                    // Se for uma string, insere diretamente
                    DB::table('insurance_question')->insert([
                        'insurance_id' => $insurance->id,
                        'question_id' => $question_id,
                        'question_description' => $question_description,
                        'answer_description' => $answers, // Aqui o "answers" é a resposta única
                        'created_at' => $currentTimestamp,
                        'updated_at' => $currentTimestamp
                    ]);
                }
            }
        } catch (\Throwable $th) {
            info($th);
            Notification::make()
                ->title('Sentimos muito, ocorreu um erro ao inicializar o formulário!')
                ->body('Por favor verifique o formulário e tente novamente.')
                ->danger()
                ->send();

            return back()->withInput()->withErrors(['msg' => 'Erro ao processar sua solicitação.']);
        }

        Notification::make()
            ->title('OK!')
            ->body('Tudo certo! Confira como ficou seu plano!')
            ->success()
            ->send();

        return view('pages.cotacao', ["step" => 5, 'lead' => $lead]);
    }
	
#LIVEWIRE COMPONENTE
#FORM DINAMICO
#FORM COM RESPOSTAS COM MULTIPLAS ESCOLHAS
	
	<?php

	namespace App\Livewire;

	use Livewire\Component;
	use Illuminate\Database\Eloquent\Model;

	class ListQuestions extends Component
	{
		public $insurance;

		public function mount($insurance): void
		{
			$this->insurance = $insurance;
		}

		public function render()
		{
			//info($this->insurance->questions);
			return
				<<<'HTML'
			<div>
				@if($insurance == null || $insurance->questions == null)
					<h3>Nenhum questionário encontrado</h3>
					
				@else
					<hr class="h-px mb-6 from-blue-300 to-white border-0 w-full">
					@foreach ($insurance->questions as $question)  
					<div class="mt-6">        
						<h3 class="text-sm font-semibold text-blue-900">{{$question->description}}</h3>

						@if($question->type == 'single')

							<ul class="grid gap-4 grid-cols-5 mt-4">
								@foreach ($question->answers as $answer)
									<input type="radio" name="respostas[{{$question->id}}]" id="{{$answer->id}}" value="{{$answer->value}}" class="hidden peer" required />
									<label for="{{$answer->id}}"
											class="inline-flex items-center justify-center w-full p-4 text-blue-900 bg-white  rounded-lg cursor-pointer  peer-checked:bg-sky-600 peer-checked:text-white hover:bg-sky-600 hover:text-white">
											<div class="block">
												<div class="w-full text-xs">{{$answer->value}}</div>
											</div>
									</label>
								@endforeach
							</ul> 

						@elseif($question->type == 'multiple')

							<ul>
								@foreach ($question->answers as $answer)
									
									<li class="flex items-center mt-2">
										<input id="{{$answer->id}}" name="respostas[{{$question->id}}][]" type="checkbox" value="{{$answer->value}}"
											class="w-4 h-4 text-blue-900 bg-white border-gray-300 rounded focus:ring-blue-500 focus:ring-2" />
										<label for="{{$answer->id}}" class="ms-2 text-sm text-blue-900">
											{{$answer->value}}
										</label>
									</li>                                
									
								@endforeach
							</ul>          

						@elseif($question->type == 'text')
							<li>
								<div class="relative mt-4">
									<input type="text" id="{{$answer->id}}" name="respostas[{{$question->id}}]" placeholder="Digite aqui"
										class="block rounded-lg px-2.5 pb-2.5 pt-6 w-full text-xs text-blue-900 bg-white border-0 focus:outline-none peer" />
									<label for="{{$answer->id}}"
										class="absolute text-xs text-gray-400 duration-300 transform -translate-y-3 scale-75 top-4 z-10 origin-[0] start-2.5">
										Descrição
									</label>
								</div>
							</li>
						@endif   

					</div>
					@endforeach
				@endif
			</div>
			HTML;
		}
	}

#FRONT-END COMPONENTE LIVEWIRE COM O FORM

        <div class="mt-8 grid grid-cols-8">
            <div class="col-start-2 col-span-5 rounded-xl border border-sky-200 p-6">
                <div class="items-center">
                    <div wire:loading style="text-align: center;">
                        <img src="{{ asset('img/loading.gif') }}" alt="Loading..." style="width: 50px;" />
                        <p>Carregando Questionário...</p>
                    </div>
                    <div wire:loading.remove>
                        @livewire(ListQuestions::class, ['lazy' => true, 'insurance' => $insurance])
                    </div>
                </div>                
            </div>
        </div>
